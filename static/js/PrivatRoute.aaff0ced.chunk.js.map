{"version":3,"file":"static/js/PrivatRoute.aaff0ced.chunk.js","mappings":"qKAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,WAAY,EAC9CC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,MAAO,EAC1CC,EAAa,SAAAL,GAAK,OAAIA,EAAMC,KAAKK,IAAK,EACtCC,EAAgB,SAAAP,GAAK,OAAIA,EAAMQ,MAAMC,OAAQ,EAC7CC,EAAc,SAAAV,GAAK,OAAIA,EAAMC,KAAKU,KAAM,EACxCC,EAAmB,SAAAZ,GAAK,OAAIA,EAAMC,KAAKY,UAAW,ECKlDC,EAAU,WAQrB,MAAO,CACLD,YARiBE,EAAAA,EAAAA,IAAYH,GAS7BR,QARaW,EAAAA,EAAAA,IAAYZ,GASzBG,MARWS,EAAAA,EAAAA,IAAYV,GASvBI,SARcM,EAAAA,EAAAA,IAAYR,GAS1BI,OARYI,EAAAA,EAAAA,IAAYL,GASxBM,OARYD,EAAAA,EAAAA,IAAYhB,GAU5B,C,sGCvBe,SAASkB,EAAWC,GAAgB,IAAbC,EAAQD,EAARC,SAC5BN,GAAeC,EAAAA,EAAAA,KAAfD,WAER,OAAOO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,SAAGN,EAAaM,GAAWC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,YACjD,C","sources":["redux/selector.jsx","hooks/useAuth.js","routes/PrivateRouter.jsx"],"sourcesContent":["export const selectToken = state => state.auth.accessToken;\nexport const selectStatus = state => state.auth.status;\nexport const selectUser = state => state.auth.user;\nexport const selectBalance = state => state.trans.balance;\nexport const selectError = state => state.auth.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\n// export const authSelectors = { getToken, getStatus, getUser };\n\n// export const transSelectors = { getBalance };\n","import { useSelector } from 'react-redux';\nimport {\n  selectToken,\n  selectStatus,\n  selectUser,\n  selectBalance,\n  selectIsLoggedIn,\n  selectError,\n} from 'redux/selector';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const status = useSelector(selectStatus);\n  const user = useSelector(selectUser);\n  const balance = useSelector(selectBalance);\n  const error = useSelector(selectError);\n  const token = useSelector(selectToken);\n\n  return {\n    isLoggedIn,\n    status,\n    user,\n    balance,\n    error,\n    token,\n  };\n};\n","import { Navigate } from 'react-router-dom';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function PrivatRoute({ children }) {\n  const { isLoggedIn } = useAuth();\n\n  return <>{isLoggedIn ? children : <Navigate to=\"/login\" />}</>;\n}\n"],"names":["selectToken","state","auth","accessToken","selectStatus","status","selectUser","user","selectBalance","trans","balance","selectError","error","selectIsLoggedIn","isLoggedIn","useAuth","useSelector","token","PrivatRoute","_ref","children","_jsx","_Fragment","Navigate","to"],"sourceRoot":""}